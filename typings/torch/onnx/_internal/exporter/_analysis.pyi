"""
This type stub file was generated by pyright.
"""

import dataclasses
import torch
import torch._export.serde.schema
import torch.fx
from collections import defaultdict
from typing import TYPE_CHECKING
from torch.onnx._internal.exporter import _registration

"""Compatibility analyzer for PyTorch models."""
if TYPE_CHECKING:
    ...
@dataclasses.dataclass
class ModelInfo:
    """Information about the model."""
    parameter_count: defaultdict[torch.dtype, int] = ...
    buffer_count: defaultdict[torch.dtype, int] = ...
    fx_node_count: int = ...
    fx_node_op_count: defaultdict[str, int] = ...
    fx_node_target_count: defaultdict[str, int] = ...
    dispatch_failures: list[tuple[torch.fx.Node, str]] = ...
    inputs: dict[str, torch._export.serde.schema.TensorMeta] = ...
    outputs: dict[str, torch._export.serde.schema.TensorMeta] = ...


def analyze(exported_program: torch.export.ExportedProgram, registry: _registration.ONNXRegistry | None = ..., file=...) -> None:
    """Analyze the compatibility of the exported program."""
    ...

def compare_ops(program_a: torch.export.ExportedProgram, program_b: torch.export.ExportedProgram) -> tuple[set[str], set[str]]:
    """Compare and get unique ops in two exported programs.

    Args:
        program_a: The first exported program.
        program_b: The second exported program.

    Returns:
        A tuple of two sets, where the first set contains the unique ops in the first program
        and the second set contains the unique ops in the second program.
    """
    ...


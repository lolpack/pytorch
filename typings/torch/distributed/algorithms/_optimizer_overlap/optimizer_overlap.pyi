"""
This type stub file was generated by pyright.
"""

from abc import ABC, abstractmethod
from torch.distributed.fsdp import FullyShardedDataParallel
from torch.nn.parallel import DistributedDataParallel
from torch.optim import Optimizer

_registered_overlapped_optims: dict[type, type] = ...
def register_overlapped(optim_cls): # -> Callable[..., Any]:
    ...

class OverlappedOptimizer(ABC):
    def __init__(self, optim_cls: type) -> None:
        """
        Initialize the OverlappedOptimizer.

        Overlappedoptimizer is a base class that child classes can implement to
        specify how different optimizers will register themselves with DDP.
        """
        ...
    
    @abstractmethod
    def register_ddp(self, ddp: DistributedDataParallel) -> None:
        """Registers the overlapped optimizer with DDP."""
        ...
    
    @abstractmethod
    def register_fsdp(self, fsdp: FullyShardedDataParallel) -> None:
        """Registers the overlapped optimizer with FSDP."""
        ...
    


@register_overlapped(Optimizer)
class _OverlappedStandardOptimizer(OverlappedOptimizer):
    """Overlaps a regular ``Optimizer``."""
    def __init__(self, optim_cls: type, params, *optim_args, **optim_kwargs) -> None:
        ...
    
    def register_ddp(self, ddp_inst: DistributedDataParallel): # -> None:
        ...
    
    def register_fsdp(self, fsdp: FullyShardedDataParallel) -> None:
        """Register the overlapped optimizer with FSDP."""
        ...
    



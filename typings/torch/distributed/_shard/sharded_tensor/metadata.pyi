"""
This type stub file was generated by pyright.
"""

import torch
from dataclasses import dataclass
from enum import Enum
from torch.distributed._shard.metadata import ShardMetadata

class MEM_FORMAT_ENCODING(Enum):
    TORCH_CONTIGUOUS_FORMAT = ...
    TORCH_CHANNELS_LAST = ...
    TORCH_PRESERVE_FORMAT = ...


@dataclass
class TensorProperties:
    """Properties used to create :class:`Tensor`"""
    dtype: torch.dtype = ...
    layout: torch.layout = ...
    requires_grad: bool = ...
    memory_format: torch.memory_format = ...
    pin_memory: bool = ...
    def __getstate__(self): # -> tuple[dtype, layout, bool, Literal[MEM_FORMAT_ENCODING.TORCH_CONTIGUOUS_FORMAT, MEM_FORMAT_ENCODING.TORCH_CHANNELS_LAST, MEM_FORMAT_ENCODING.TORCH_PRESERVE_FORMAT], bool]:
        ...
    
    def __setstate__(self, state): # -> None:
        ...
    
    @staticmethod
    def create_from_tensor(tensor: torch.Tensor) -> TensorProperties:
        ...
    


@dataclass
class ShardedTensorMetadata:
    """
    Represents metadata for :class:`ShardedTensor`
    """
    shards_metadata: list[ShardMetadata] = ...
    size: torch.Size = ...
    tensor_properties: TensorProperties = ...



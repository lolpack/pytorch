"""
This type stub file was generated by pyright.
"""

from typing import Optional, Union
from torch import Tensor
from .adam import Adam
from .optimizer import ParamsT

__all__ = ["AdamW", "adamw"]
class AdamW(Adam):
    def __init__(self, params: ParamsT, lr: Union[float, Tensor] = ..., betas: tuple[Union[float, Tensor], Union[float, Tensor]] = ..., eps: float = ..., weight_decay: float = ..., amsgrad: bool = ..., *, maximize: bool = ..., foreach: Optional[bool] = ..., capturable: bool = ..., differentiable: bool = ..., fused: Optional[bool] = ...) -> None:
        ...
    
    def __setstate__(self, state): # -> None:
        ...
    


def adamw(params: list[Tensor], grads: list[Tensor], exp_avgs: list[Tensor], exp_avg_sqs: list[Tensor], max_exp_avg_sqs: list[Tensor], state_steps: list[Tensor], foreach: Optional[bool] = ..., capturable: bool = ..., differentiable: bool = ..., fused: Optional[bool] = ..., grad_scale: Optional[Tensor] = ..., found_inf: Optional[Tensor] = ..., has_complex: bool = ..., *, amsgrad: bool, beta1: float, beta2: float, lr: Union[float, Tensor], weight_decay: float, eps: float, maximize: bool): # -> None:
    r"""Functional API that performs AdamW algorithm computation.

    See :class:`~torch.optim.AdamW` for details.
    """
    ...


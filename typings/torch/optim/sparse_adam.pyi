"""
This type stub file was generated by pyright.
"""

import torch
from typing import Union
from torch import Tensor
from .optimizer import Optimizer, ParamsT

__all__ = ["SparseAdam"]
class SparseAdam(Optimizer):
    def __init__(self, params: ParamsT, lr: Union[float, Tensor] = ..., betas: tuple[float, float] = ..., eps: float = ..., maximize: bool = ...) -> None:
        ...
    
    @torch.no_grad()
    def step(self, closure=...): # -> None:
        """Perform a single optimization step.

        Args:
            closure (Callable, optional): A closure that reevaluates the model
                and returns the loss.
        """
        ...
    



"""
This type stub file was generated by pyright.
"""

import ast
import functools
from typing import Any, NamedTuple, Optional
from torch._C._jit_tree_views import SourceRangeFactory

def get_source_lines_and_file(obj: Any, error_msg: Optional[str] = ...) -> tuple[list[str], int, Optional[str]]:
    """
    Wrapper around inspect.getsourcelines and inspect.getsourcefile.

    Returns: (sourcelines, file_lino, filename)
    """
    ...

def normalize_source_lines(sourcelines: list[str]) -> list[str]:
    """
    This helper function accepts a list of source lines. It finds the
    indentation level of the function definition (`def`), then it indents
    all lines in the function body to a point at or greater than that
    level. This allows for comments and continued string literals that
    are at a lower indentation than the rest of the code.
    Args:
        sourcelines: function source code, separated into lines by
                        the '\n' character
    Returns:
        A list of source lines that have been correctly aligned
    """
    ...

class SourceContext(SourceRangeFactory):
    def __init__(self, source, filename, file_lineno, leading_whitespace_len, uses_true_division=..., funcname=...) -> None:
        ...
    


@functools.cache
def make_source_context(*args): # -> SourceContext:
    ...

def fake_range(): # -> SourceRange:
    ...

class ParsedDef(NamedTuple):
    ast: ast.Module
    ctx: SourceContext
    source: str
    filename: Optional[str]
    file_lineno: int
    ...


def parse_def(fn): # -> ParsedDef:
    ...


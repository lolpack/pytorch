"""
This type stub file was generated by pyright.
"""

from typing import Callable, Optional, TypeVar
from torch.fx import Graph
from torch.fx._compatibility import compatibility
from torch.fx.graph_module import GraphModule

T = TypeVar("T")
__all__ = ["GraphTransformObserver"]
@compatibility(is_backward_compatible=False)
class GraphTransformObserver:
    __pass_count = ...
    def __init__(self, gm: GraphModule, passname: str, subsystem: Optional[str] = ..., log_url: Optional[str] = ...) -> None:
        """
        log_url is inferred to be torch._inductor.config.trace.log_url_for_graph_xform unless otherwise specified
        """
        ...
    
    @classmethod
    def get_current_pass_count(cls): # -> int:
        ...
    
    def apply_gm_pass(self, pass_fn: Callable[[GraphModule], T]) -> Optional[T]:
        ...
    
    def apply_graph_pass(self, pass_fn: Callable[[Graph], T]) -> Optional[T]:
        ...
    
    def __enter__(self): # -> Self:
        ...
    
    def __exit__(self, type, value, tb): # -> None:
        ...
    
    def get_node_creation_hook(self): # -> Callable[..., None]:
        ...
    
    def get_node_erase_hook(self): # -> Callable[..., None]:
        ...
    
    def get_node_replace_hook(self): # -> Callable[..., None]:
        ...
    
    def get_deepcopy_hook(self): # -> Callable[..., None]:
        ...
    



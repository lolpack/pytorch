"""
This type stub file was generated by pyright.
"""

from collections.abc import Iterable, Sequence
from typing import Optional
from torch.fx.graph_module import GraphModule
from torch.fx.node import Node
from torch.fx.passes.operator_support import OperatorSupportBase

logger = ...
class Partition:
    def __init__(self, id: Optional[int] = ..., nodes: Optional[Iterable[Node]] = ...) -> None:
        ...
    
    def __repr__(self) -> str:
        ...
    
    def add_node(self, node: Node): # -> None:
        ...
    
    def remove_node(self, node: Node): # -> None:
        ...
    
    def size(self): # -> int:
        ...
    


class _DependencyViewer:
    def __init__(self, graph_module: GraphModule) -> None:
        ...
    
    def downstreams_of(self, node: Node) -> set[Node]:
        ...
    


class CapabilityBasedPartitioner:
    def __init__(self, graph_module: GraphModule, operator_support: OperatorSupportBase, allows_single_node_partition: bool = ..., non_compute_ops: Optional[Sequence[str]] = ..., allowed_single_node_partition_ops: Optional[Sequence[str]] = ...) -> None:
        ...
    
    def propose_partitions(self) -> list[Partition]:
        ...
    
    def fuse_partitions(self, partitions: list[Partition], prefix: str = ...) -> GraphModule:
        ...
    
    def remove_bookend_non_compute_ops(self, partitions: list[Partition]): # -> None:
        ...
    
    def partition_and_fuse(self, prefix: str = ...) -> GraphModule:
        ...
    



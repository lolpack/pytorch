"""
This type stub file was generated by pyright.
"""

from concurrent.futures import Future, ProcessPoolExecutor
from dataclasses import dataclass
from multiprocessing.context import BaseContext
from typing import Callable, Optional, TypeVar
from typing_extensions import ParamSpec

_P = ParamSpec("_P")
_R = TypeVar("_R")
log = ...
@dataclass
class _QueueStats:
    pending: dict[int, float] = ...
    timing: list[float] = ...
    enqueue_count: int = ...
    dequeue_count: int = ...
    max_queue_depth: int = ...
    pool_count: int = ...


_queue_stats = ...
_queue_stats_lock = ...
class TrackedProcessPoolExecutor(ProcessPoolExecutor):
    def __init__(self, max_workers: Optional[int] = ..., mp_context: Optional[BaseContext] = ..., initializer: Optional[Callable[[], object]] = ...) -> None:
        ...
    
    def submit(self, fn: Callable[_P, _R], /, *args: _P.args, **kwargs: _P.kwargs) -> Future[_R]:
        ...
    



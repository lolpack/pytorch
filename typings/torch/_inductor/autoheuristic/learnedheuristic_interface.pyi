"""
This type stub file was generated by pyright.
"""

from typing import Optional
from torch._inductor.autoheuristic.autoheuristic_utils import AHContext, AHMetadata, Choice

class LearnedHeuristic:
    """
    LearnedHeuristic is a base class for all learned heuristics.
    """
    def __init__(self) -> None:
        ...
    
    def check_precondition(self, metadata: AHMetadata, context: AHContext) -> bool:
        ...
    
    def get_decision(self, context: AHContext, choices: list[Choice]) -> Optional[Choice]:
        ...
    
    def get_confidence_threshold(self) -> float:
        ...
    
    def get_name(self) -> str:
        ...
    
    def get_decisions_ranked(self, context: AHContext) -> Optional[list[str]]:
        ...
    


class LearnedHeuristicRegression(LearnedHeuristic):
    def __init__(self) -> None:
        ...
    
    def get_feedback(self, context: AHContext, choice: Choice) -> float:
        ...
    
    def get_decision(self, context: AHContext, choices: list[Choice]) -> Optional[Choice]:
        ...
    


class LearnedHeuristicDecision(LearnedHeuristic):
    def __init__(self) -> None:
        ...
    
    def get_choice(self, idx: int) -> Optional[str]:
        ...
    
    def get_decision(self, context: AHContext, choices: list[Choice]) -> Optional[Choice]:
        ...
    
    def get_decisions_ranked(self, context: AHContext) -> Optional[list[str]]:
        ...
    
    def get_best_choices(self, context: AHContext) -> Optional[list[tuple[float, int]]]:
        ...
    



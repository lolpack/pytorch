"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Any, Optional, TYPE_CHECKING
from typing_extensions import override
from ...ir import Buffer, IRNode, Layout
from ...utils import IndentedBuffer
from ..common import KernelTemplate
from .cuda_kernel import CUDATemplateCaller

if TYPE_CHECKING:
    ...
else:
    ...
GemmOperation = Any
autotuning_log = ...
@dataclass(frozen=True)
class ArgInfo:
    name: str
    ty: str
    ...


class CUDATemplate(KernelTemplate):
    index_counter = ...
    def __init__(self, name: str, input_nodes: list[Buffer], layout: Layout, input_reorder: Optional[list[int]] = ...) -> None:
        """

        Baseclass for CUDA C++ Templates, derived from KernelTemplate. Not to be instantiated directly.

        Args:
            name (str): The name of the CUDATemplate object.
            input_nodes (List[IRNode]): A list of input IRNodes.
            layout (Layout): The layout of the output buffer / tensor.
            input_reorder (Optional[List[int]]): An optional list that specifies the order of the input nodes.

        """
        ...
    
    @staticmethod
    def supports_epilogue_fusion(op: GemmOperation) -> bool:
        ...
    
    def generate(self, description, **kwargs) -> CUDATemplateCaller:
        """
        Generates the CUDA template caller object for the given GEMM template and operation. This CUDATemplateCaller
        may be used to call and benchmark the generated CUDA kernel in a standalone manner to enable Autotuning.

        Args:
            kwargs: Additional keyword arguments.

        Returns:
            A CUDATemplateCaller object representing the generated CUDA template caller.
        """
        ...
    
    def header(self) -> IndentedBuffer:
        ...
    
    def globals(self) -> IndentedBuffer:
        ...
    
    def render(self, **kwargs) -> str:
        ...
    
    def get_runtime_arg_info(self) -> list[ArgInfo]:
        ...
    
    def get_runtime_arg_values(self, **kwargs) -> list[Any]:
        ...
    


class CUTLASSTemplate(CUDATemplate):
    """
    CUTLASSTemplate is a class that provides a template for generating CUTLASS Templates. Used as a baseclass for the
    CUTLASSGemmTemplate, providing functionality that might also be relevant for non-GEMM CUTLASS Kernels.
    """
    def header(self) -> IndentedBuffer:
        ...
    
    def globals(self) -> IndentedBuffer:
        ...
    
    def cute_int(self, int_str: str, var_name: str) -> str:
        ...
    
    _DTYPE_TO_CUTLASS = ...
    _DTYPE_TO_CUTLASS_SPARSE_META = ...
    def cutlass_type_cast(self, node: IRNode, ptr: str) -> str:
        ...
    
    def cutlass_sparse_meta_type_cast(self, node: IRNode, ptr: str) -> str:
        ...
    
    @override
    def get_runtime_arg_info(self) -> list[ArgInfo]:
        ...
    
    @override
    def get_runtime_arg_values(self, **kwargs) -> list[Any]:
        """
        Helper method to retrieve runtime args from generate kwargs
        """
        ...
    



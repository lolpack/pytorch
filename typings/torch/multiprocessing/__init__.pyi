"""
This type stub file was generated by pyright.
"""

import multiprocessing
import sys
import torch
import atexit
from .reductions import init_reductions
from multiprocessing import *
from .spawn import ENV_VAR_PARALLEL_START, ProcessContext, ProcessExitedException, ProcessRaisedException, SpawnContext, spawn, start_processes
from multiprocessing.resource_tracker import ResourceTracker as _RT

"""torch.multiprocessing is a wrapper around the native :mod:`multiprocessing` module.

It registers custom reducers, that use shared memory to provide shared
views on the same data in different processes. Once the tensor/storage is moved
to shared_memory (see :func:`~torch.Tensor.share_memory_`), it will be possible
to send it to other processes without making any copies.

The API is 100% compatible with the original module - it's enough to change
``import multiprocessing`` to ``import torch.multiprocessing`` to have all the
tensors sent through the queues or shared via other mechanisms, moved to shared
memory.

Because of the similarity of APIs we do not document most of this package
contents, and we recommend referring to very good docs of the original module.
"""
__all__ = ["set_sharing_strategy", "get_sharing_strategy", "get_all_sharing_strategies"]
__all__ += multiprocessing.__all__
if sys.platform == "darwin" or sys.platform == "win32":
    _sharing_strategy = ...
    _all_sharing_strategies = ...
else:
    ...
def set_sharing_strategy(new_strategy): # -> None:
    """Set the strategy for sharing CPU tensors.

    Args:
        new_strategy (str): Name of the selected strategy. Should be one of
            the values returned by :func:`get_all_sharing_strategies()`.
    """
    ...

def get_sharing_strategy(): # -> str:
    """Return the current strategy for sharing CPU tensors."""
    ...

def get_all_sharing_strategies(): # -> set[str]:
    """Return a set of sharing strategies supported on a current system."""
    ...

if (sys.platform == "darwin" and sys.version_info >= (3, 12, 2) and hasattr(_RT, "__del__")):
    ...

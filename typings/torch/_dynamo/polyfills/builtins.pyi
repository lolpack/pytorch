"""
This type stub file was generated by pyright.
"""

import builtins
from typing import TYPE_CHECKING, TypeVar
from ..decorators import substitute_in_graph
from collections.abc import Iterable

"""
Python polyfills for builtins
"""
if TYPE_CHECKING:
    ...
__all__ = ["all", "any", "enumerate", "sum"]
_T = TypeVar("_T")
@substitute_in_graph(builtins.all, can_constant_fold_through=True)
def all(iterable: Iterable[object], /) -> bool:
    ...

@substitute_in_graph(builtins.any, can_constant_fold_through=True)
def any(iterable: Iterable[object], /) -> bool:
    ...

@substitute_in_graph(builtins.enumerate, is_embedded_type=True)
def enumerate(iterable: Iterable[_T], start: int = ...) -> Iterable[tuple[int, _T]]:
    ...

@substitute_in_graph(builtins.sum, can_constant_fold_through=True)
def sum(iterable: Iterable[_T], /, start: _T = ...) -> _T:
    ...


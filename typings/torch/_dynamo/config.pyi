"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Literal, Optional, TYPE_CHECKING, Union
from torch.utils._config_typing import *

"""
Configuration module for TorchDynamo compiler and optimization settings.

This module contains various configuration flags and settings that control TorchDynamo's
behavior, including:
- Runtime behavior flags (e.g., guard settings, specialization options)
- Debugging and development options
- Performance tuning parameters
- Feature toggles for experimental features
"""
log_file_name: Optional[str] = ...
verbose = ...
verify_correctness = ...
minimum_call_count = ...
dead_code_elimination = ...
recompile_limit = ...
accumulated_recompile_limit = ...
skip_code_recursive_on_recompile_limit_hit = ...
fail_on_recompile_limit_hit = ...
cache_size_limit: int = ...
accumulated_cache_size_limit: int = ...
skip_code_recursive_on_cache_limit_hit: bool = ...
fail_on_cache_limit_hit: bool = ...
specialize_int = ...
specialize_float = ...
dynamic_shapes = ...
use_lazy_graph_module = ...
assume_static_by_default = ...
automatic_dynamic_shapes = ...
automatic_dynamic_shapes_mark_as: Literal["dynamic", "unbacked"] = ...
force_parameter_static_shapes = ...
force_nn_module_property_static_shapes = ...
allow_ignore_mark_dynamic = ...
guard_nn_modules = ...
guard_nn_modules_using_dict_tags = ...
prepare_freezing = ...
traceable_tensor_subclasses: set[type[Any]] = ...
nontraceable_tensor_subclasses: set[type[Any]] = ...
suppress_errors = ...
replay_record_enabled = ...
rewrite_assert_with_torch_assert = ...
disable = ...
cprofile = ...
skipfiles_inline_module_allowlist: dict[Any, Any] = ...
allowed_functions_module_string_ignorelist = ...
repro_after = ...
repro_level = ...
repro_forward_only = ...
repro_tolerance = ...
repro_ignore_non_fp = ...
same_two_models_use_fp64 = ...
capture_scalar_outputs = ...
capture_dynamic_output_shape_ops = ...
prefer_deferred_runtime_asserts_over_guards = ...
allow_complex_guards_as_runtime_asserts = ...
force_unspec_int_unbacked_size_like_on_torchrec_kjt = ...
allow_unspec_int_on_nn_module = ...
optimize_ddp: Union[bool, Literal["ddp_optimizer", "python_reducer", "python_reducer_without_compiled_forward", "no_optimization",],] = ...
do_not_emit_runtime_asserts: bool = ...
skip_torchrec = ...
dont_skip_tracing = ...
optimize_ddp_lazy_compile = ...
skip_fsdp_guards = ...
skip_fsdp_hooks = ...
skip_nnmodule_hook_guards = ...
skip_no_tensor_aliasing_guards_on_parameters = ...
skip_tensor_guards_with_matching_dict_tags = ...
raise_on_ctx_manager_usage = ...
raise_on_unsafe_aot_autograd = ...
error_on_nested_jit_trace = ...
error_on_nested_fx_trace = ...
allow_rnn = ...
capture_sparse_compute = ...
error_on_recompile = ...
report_guard_failures = ...
base_dir = ...
trace_numpy = ...
numpy_default_float = ...
numpy_default_complex = ...
numpy_default_int = ...
use_numpy_random_stream = ...
enable_cpp_guard_manager = ...
enable_cpp_symbolic_shape_guards = ...
enable_trace_contextlib = ...
enable_trace_unittest = ...
enable_faithful_generator_behavior = ...
inline_inbuilt_nn_modules = ...
install_free_tensors = ...
enable_cpp_framelocals_guard_eval = ...
use_graph_deduplication = ...
track_nodes_for_deduplication = ...
graph_deduplication_lint = ...
issue_3_13_0_warning = ...
allow_empty_graphs = ...
record_compile_time_instruction_count = ...
def default_debug_dir_root(): # -> str:
    ...

debug_dir_root = ...
_save_config_ignore = ...
cudagraph_backend_keep_input_mutation = ...
cudagraph_backend_support_input_mutation = ...
only_allow_pt2_compliant_ops = ...
capture_autograd_function = ...
capture_func_transforms = ...
log_compilation_metrics = ...
reorderable_logging_functions: set[Callable[[Any], None]] = ...
ignore_logger_methods: set[Callable[..., Any]] = ...
inject_BUILD_SET_unimplemented_TESTING_ONLY = ...
_autograd_backward_strict_mode_banned_ops = ...
_autograd_backward_strict_mode_conditional_banned_ops = ...
fake_tensor_cache_enabled = ...
fake_tensor_cache_crosscheck_enabled = ...
fake_tensor_disable_inference_mode = ...
compiled_autograd = ...
compiled_autograd_kwargs_override: dict[str, Any] = ...
enable_compiler_collectives = ...
automatic_dynamic_local_pgo: bool = ...
automatic_dynamic_remote_pgo: Optional[bool] = ...
_unsafe_skip_fsdp_module_guards = ...
run_gc_after_compile = ...
wrap_top_frame = ...
record_runtime_overhead = ...
_custom_ops_profile: Optional[Any] = ...
if TYPE_CHECKING:
    ...

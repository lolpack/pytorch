"""
This type stub file was generated by pyright.
"""

import torch
from collections.abc import Sequence
from typing import Any, Optional, TypeVar, Union, overload
from typing_extensions import deprecated

__all__ = ["scatter", "scatter_kwargs", "gather"]
@deprecated("`is_namedtuple` is deprecated, please use the python checks instead", category=FutureWarning)
def is_namedtuple(obj: Any) -> bool:
    ...

T = TypeVar("T", dict, list, tuple)
@overload
def scatter(inputs: torch.Tensor, target_gpus: Sequence[Union[int, torch.device]], dim: int = ...) -> tuple[torch.Tensor, ...]:
    ...

@overload
def scatter(inputs: T, target_gpus: Sequence[Union[int, torch.device]], dim: int = ...) -> list[T]:
    ...

def scatter(inputs, target_gpus, dim=...): # -> Any | list[Any] | list[tuple[Any, ...]] | list[list[Any]] | list[dict[Any, Any]] | list[Any | tuple[()] | list[Any] | dict[Any, Any]] | None:
    r"""Slice tensors into approximately equal chunks and distributes them across given GPUs.

    Duplicates references to objects that are not tensors.
    """
    ...

def scatter_kwargs(inputs: tuple[Any, ...], kwargs: Optional[dict[str, Any]], target_gpus: Sequence[Union[int, torch.device]], dim: int = ...) -> tuple[tuple[Any, ...], tuple[dict[str, Any], ...]]:
    r"""Scatter with support for kwargs dictionary."""
    ...

def gather(outputs: Any, target_device: Union[int, torch.device], dim: int = ...) -> Any:
    r"""Gather tensors from different GPUs on a specified device.

    This function is useful for gathering the results of a distributed computation.
    It takes a sequence of objects, one for each GPU, and returns a single object
    on the specified device.

    Args:
        outputs (Any): A sequence of objects (potentially tensors) to gather.
        target_device (Union[int, torch.device]): The device to gather the tensors to.
            Use 'cpu' for CPU to avoid a deprecation warning.
        dim (int, optional): The dimension along which to gather. Default: 0.

    Returns:
        Any: A gathered object (potentially tensor) on the specified device.
    """
    ...


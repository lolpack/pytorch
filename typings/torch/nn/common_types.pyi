"""
This type stub file was generated by pyright.
"""

from typing import Optional, TypeVar, Union
from typing_extensions import TypeAlias as _TypeAlias
from torch import Tensor

T = TypeVar("T")
_scalar_or_tuple_any_t: _TypeAlias = Union[T, tuple[T, ...]]
_scalar_or_tuple_1_t: _TypeAlias = Union[T, tuple[T]]
_scalar_or_tuple_2_t: _TypeAlias = Union[T, tuple[T, T]]
_scalar_or_tuple_3_t: _TypeAlias = Union[T, tuple[T, T, T]]
_scalar_or_tuple_4_t: _TypeAlias = Union[T, tuple[T, T, T, T]]
_scalar_or_tuple_5_t: _TypeAlias = Union[T, tuple[T, T, T, T, T]]
_scalar_or_tuple_6_t: _TypeAlias = Union[T, tuple[T, T, T, T, T, T]]
_size_any_t: _TypeAlias = _scalar_or_tuple_any_t[int]
_size_1_t: _TypeAlias = _scalar_or_tuple_1_t[int]
_size_2_t: _TypeAlias = _scalar_or_tuple_2_t[int]
_size_3_t: _TypeAlias = _scalar_or_tuple_3_t[int]
_size_4_t: _TypeAlias = _scalar_or_tuple_4_t[int]
_size_5_t: _TypeAlias = _scalar_or_tuple_5_t[int]
_size_6_t: _TypeAlias = _scalar_or_tuple_6_t[int]
_size_any_opt_t: _TypeAlias = _scalar_or_tuple_any_t[Optional[int]]
_size_2_opt_t: _TypeAlias = _scalar_or_tuple_2_t[Optional[int]]
_size_3_opt_t: _TypeAlias = _scalar_or_tuple_3_t[Optional[int]]
_ratio_2_t: _TypeAlias = _scalar_or_tuple_2_t[float]
_ratio_3_t: _TypeAlias = _scalar_or_tuple_3_t[float]
_ratio_any_t: _TypeAlias = _scalar_or_tuple_any_t[float]
_tensor_list_t: _TypeAlias = _scalar_or_tuple_any_t[Tensor]
_maybe_indices_t: _TypeAlias = _scalar_or_tuple_2_t[Tensor]

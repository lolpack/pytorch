"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Optional, TypeVar
from typing_extensions import ParamSpec

logger = ...
console_handler = ...
formatter = ...
_P = ParamSpec("_P")
_R = TypeVar("_R")
class StrobelightCLIProfilerError(Exception):
    """
    Raised when an error happens during strobelight profiling
    """
    ...


class StrobelightCLIFunctionProfiler:
    """
    Note: this is a Meta only tool.

    StrobelightCLIFunctionProfiler can be used to profile a python function and
    generate a strobelight link with the results. It works on meta servers but
    does not requries an fbcode target.
    When stop_at_error is false(default), error during profiling does not prevent
    the work function from running.

    Check function_profiler_example.py for an example.
    """
    _lock = ...
    def __init__(self, *, stop_at_error: bool = ..., max_profile_duration_sec: int = ..., sample_each: float = ..., run_user_name: str = ..., timeout_wait_for_running_sec: int = ..., timeout_wait_for_finished_sec: int = ..., recorded_env_variables: Optional[list[str]] = ..., sample_tags: Optional[list[str]] = ..., stack_max_len: int = ..., async_stack_max_len: int = ...) -> None:
        ...
    
    def profile(self, work_function: Callable[_P, _R], *args: _P.args, **kwargs: _P.kwargs) -> Optional[_R]:
        ...
    


def strobelight(profiler: Optional[StrobelightCLIFunctionProfiler] = ..., **kwargs: Any) -> Callable[[Callable[_P, _R]], Callable[_P, Optional[_R]]]:
    ...


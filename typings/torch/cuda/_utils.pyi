"""
This type stub file was generated by pyright.
"""

import ctypes
from typing import Any, Optional

class _CudaModule:
    def __init__(self, module: ctypes.c_void_p) -> None:
        ...
    
    def __getattr__(self, name: str) -> _CudaKernel:
        ...
    


class _CudaKernel:
    """
    Represents a compiled CUDA kernel that can be called with PyTorch tensors.
    """
    def __init__(self, func: ctypes.c_void_p, module: ctypes.c_void_p) -> None:
        ...
    
    def __call__(self, grid: tuple[int, int, int] = ..., block: tuple[int, int, int] = ..., args: Optional[list] = ..., shared_mem: int = ..., stream: Optional[Any] = ...) -> None:
        """
        Call the compiled CUDA kernel

        Args:
            grid (tuple): Grid dimensions (grid_x, grid_y, grid_z)
            block (tuple): Block dimensions (block_x, block_y, block_z)
            args (list): List of arguments to pass to the kernel.
                         PyTorch tensor arguments will be automatically converted to pointers.
            shared_mem (int): Shared memory size in bytes
            stream (torch.cuda.Stream): CUDA stream to use. If None, uses current stream.
        """
        ...
    



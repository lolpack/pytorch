"""
This type stub file was generated by pyright.
"""

import dataclasses
from dataclasses import dataclass
from typing import Any, Callable, Optional, Protocol
from torch import _ops
from torch.utils import _pytree

class InfoProtocol(Protocol):
    _backward_fn: Optional[Callable]
    _setup_context_fn: Optional[Callable]
    ...


@dataclasses.dataclass
class Info:
    _backward_fn: Optional[Callable]
    _setup_context_fn: Optional[Callable]
    ...


def make_autograd_impl(op: _ops.OpOverload, info: InfoProtocol) -> Callable:
    @dataclass
    class Metadata:
        ...
    
    

def supports_tensorlist(cls: Any) -> Any:
    """Allows a given autograd.Function class to support List[Tensor] inputs/outputs.

    Regular autograd.Function has a constraint that it only directly supports autograd for
    Tensors. Applying @supports_tensorlist enables an autograd.Function to support
    autograd for List[Tensor] inputs and outputs.
    """
    @dataclass
    class Metadata:
        ...
    
    

def not_list_of_tensor(tree): # -> bool:
    ...

def not_list_of_optional_tensor(tree): # -> bool:
    ...

flatten = ...
unflatten = ...
spec_t = _pytree.TreeSpec

"""
This type stub file was generated by pyright.
"""

import torch
import torch.ao.nn.intrinsic as nni

__all__ = ["BatchNorm2d", "BatchNorm3d"]
class _BatchNorm(torch.nn.modules.batchnorm._BatchNorm):
    def __init__(self, num_features, eps=..., momentum=..., device=..., dtype=...) -> None:
        ...
    
    @staticmethod
    def from_float(cls, mod, use_precomputed_fake_quant=...):
        ...
    
    @classmethod
    def from_reference(cls, bn, output_scale, output_zero_point): # -> Self:
        ...
    


class BatchNorm2d(_BatchNorm):
    r"""This is the quantized version of :class:`~torch.nn.BatchNorm2d`."""
    _NNI_BN_RELU_MODULE = nni.BNReLU2d
    def __init__(self, num_features, eps=..., momentum=..., device=..., dtype=...) -> None:
        ...
    
    def forward(self, input: torch.Tensor) -> torch.Tensor:
        ...
    
    @classmethod
    def from_float(cls, mod, use_precomputed_fake_quant=...):
        ...
    


class BatchNorm3d(_BatchNorm):
    r"""This is the quantized version of :class:`~torch.nn.BatchNorm3d`."""
    _NNI_BN_RELU_MODULE = nni.BNReLU3d
    def __init__(self, num_features, eps=..., momentum=..., device=..., dtype=...) -> None:
        ...
    
    def forward(self, input: torch.Tensor) -> torch.Tensor:
        ...
    
    @classmethod
    def from_float(cls, mod, use_precomputed_fake_quant=...):
        ...
    



"""
This type stub file was generated by pyright.
"""

import collections
import torch
from typing import Any
from torch.export.exported_program import ExportGraphSignature
from torch.fx._symbolic_trace import _ConstantAttributeType

log = ...
class ConstantAttrMap(collections.abc.MutableMapping):
    """A mapping class that understands how to use module constants (tensors,
    ScriptObjects, FakeScriptObjects) as keys. We store tensors and FakeScriptObjects normally,
    but ScriptObjects are stored by hash, because different torch.ScriptObjects can point to
    the same underlying value (but we guarantee that they will `hash()` to the same value
    if that's the case).
    """
    def __init__(self) -> None:
        ...
    
    def __getitem__(self, key: _ConstantAttributeType) -> Any:
        ...
    
    def __setitem__(self, key: _ConstantAttributeType, value):
        ...
    
    def add(self, key: _ConstantAttributeType, value: Any) -> None:
        ...
    
    def __delitem__(self, key: _ConstantAttributeType): # -> None:
        ...
    
    def __iter__(self): # -> Generator[ScriptObject | Tensor | FakeScriptObject | Any, Any, None]:
        ...
    
    def __len__(self): # -> int:
        ...
    
    def __contains__(self, key: object) -> bool:
        ...
    


def get_constant_fqn(node: torch.fx.Node, constant_name: str) -> str:
    ...

def lift_constants_pass(gm: torch.fx.GraphModule, graph_signature: ExportGraphSignature, constant_attrs: ConstantAttrMap) -> dict[str, _ConstantAttributeType]:
    """
    Takes a graph module, graph signature, and modifies them implace to lift any
    constants (tensors or custom classes) as inputs to the graph. Returns a
    dictionary of names to constants.

    Arguments:
        gm (torch.fx.GraphModule): The graph module containing the graph and constants to lift.
        graph_signature (ExportGraphSignature): This graph signature will be
            mutated to add additional CONSTANT_TENSOR and CUSTOM_OBJ inputs.
        constant_attrs (ConstantAttr): A mapping from a constant value to its
            fully-qualified path in `gm`. This is used to maintain consistent
            location of constants between the original module and the exported
            version.

    Returns:
        A dictionary of fqn => constant value.
    """
    ...

def rewrite_script_object_meta(gm: torch.fx.GraphModule) -> dict[str, _ConstantAttributeType]:
    """When tracing, we produce a graph with FakeScriptObject in the
    meta["val"].

    For now, we rewrie meta["val"] to be a placeholder CustomObjArgument
    """
    ...


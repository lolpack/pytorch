"""
This type stub file was generated by pyright.
"""

import torch

def lazy_compile(**compile_kwargs): # -> Callable[..., _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]]:
    """Lazily wrap a function with torch.compile on the first call

    This avoids eagerly importing dynamo.
    """
    ...

@lazy_compile(dynamic=True)
def hash_storage_kernel(x): # -> Any:
    ...

def hash_storage(storage: torch.UntypedStorage, *, stable_hash: bool = ...) -> str:
    ...

class ContentStoreWriter:
    def __init__(self, loc: str, stable_hash: bool = ...) -> None:
        ...
    
    def write_storage(self, storage: torch.UntypedStorage) -> str:
        ...
    
    def compute_tensor_metadata(self, t: torch.Tensor, h=...): # -> tuple[dtype, str | Any, Any, tuple[int, ...], Any, Any]:
        ...
    
    def write_tensor(self, name: str, t: torch.Tensor) -> None:
        ...
    


class ContentStoreReader:
    def __init__(self, loc: str, *, cache=...) -> None:
        ...
    
    def read_storage(self, h: str, *, device=...) -> torch.UntypedStorage:
        ...
    
    def read_tensor_metadata(self, name: str): # -> Any:
        ...
    
    def read_tensor(self, name: str, *, device=...) -> torch.Tensor:
        ...
    



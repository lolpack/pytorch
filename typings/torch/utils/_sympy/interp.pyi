"""
This type stub file was generated by pyright.
"""

import functools
import sympy
from typing import Any, Union
from sympy.logic.boolalg import Boolean as SympyBoolean

"""
This is a simple interpreter for Sympy expressions that dispatches to
classes following the torch._inductor.virtualized calling convention.
For directness, the interpreter takes the handler directly rather than
consulting the TLS.  It does not use most of the methods on the full
handler; only those with corresponding Sympy expressions.  To see an example
of a full handler, see torch.utils._sympy.value_ranges.ValueRangeAnalysis.
"""
log = ...
@functools.cache
def handlers(): # -> dict[Any, str]:
    ...

ASSOCIATIVE_OPS = ...
_nil = ...
def sympy_interp(analysis, env: dict[sympy.Symbol, Any], expr: Union[sympy.Expr, SympyBoolean], *, index_dtype=..., missing_handler=...): # -> Any:
    ...


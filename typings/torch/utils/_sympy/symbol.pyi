"""
This type stub file was generated by pyright.
"""

import sympy
from collections.abc import Iterable
from enum import Enum
from typing import Union

"""
This file contains canonical definitions for our symbol naming conventions,
across torch.fx.experimental.symbolic_shapes and torch._inductor.  The
intention is:

1. To make it easily greppable where all the sites we use a prefix are
2. Make it possible to easily tell if we can introduce a new prefix without
   introducing a conflict

You can occasionally test if prefixes have been hardcoded by renaming prefixes
in this file and seeing what breaks.
"""
class SymT(Enum):
    SIZE = ...
    FLOAT = ...
    UNBACKED_INT = ...
    UNBACKED_FLOAT = ...
    TMP = ...
    INDIRECT = ...
    PRECOMPUTED_SIZE = ...
    INDEX = ...
    R0_INDEX = ...
    R1_INDEX = ...
    TEMPLATE_INDEX = ...
    XBLOCK = ...
    YBLOCK = ...
    ZBLOCK = ...
    VIEW = ...
    HALIDE = ...


prefix_str = ...
def make_symbol(prefix: SymT, idx: int, **kwargs) -> sympy.Symbol:
    ...

def symbol_is_type(sym: sympy.Basic, prefix: Union[SymT, Iterable[SymT]]) -> bool:
    ...

def free_symbol_is_type(e: sympy.Expr, prefix: Union[SymT, Iterable[SymT]]) -> bool:
    ...


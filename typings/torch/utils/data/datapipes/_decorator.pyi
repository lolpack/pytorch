"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Optional, Union
from torch.utils.data.datapipes.datapipe import IterDataPipe

class functional_datapipe:
    name: str
    def __init__(self, name: str, enable_df_api_tracing=...) -> None:
        """
        Define a functional datapipe.

        Args:
            enable_df_api_tracing - if set, any returned DataPipe would accept
            DataFrames API in tracing mode.
        """
        ...
    
    def __call__(self, cls): # -> type[IterDataPipe[Any]] | type[MapDataPipe[Any]]:
        ...
    


_determinism: bool = ...
class guaranteed_datapipes_determinism:
    prev: bool
    def __init__(self) -> None:
        ...
    
    def __enter__(self) -> None:
        ...
    
    def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any) -> None:
        ...
    


class non_deterministic:
    cls: Optional[type[IterDataPipe]] = ...
    deterministic_fn: Callable[[], bool]
    def __init__(self, arg: Union[type[IterDataPipe], Callable[[], bool]]) -> None:
        ...
    
    def __call__(self, *args, **kwargs): # -> IterDataPipe[Any] | Callable[..., IterDataPipe[Any]]:
        ...
    
    def deterministic_wrapper_fn(self, *args, **kwargs) -> IterDataPipe:
        ...
    


def argument_validation(f): # -> _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]:
    ...

_runtime_validation_enabled: bool = ...
class runtime_validation_disabled:
    prev: bool
    def __init__(self) -> None:
        ...
    
    def __enter__(self) -> None:
        ...
    
    def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any) -> None:
        ...
    


def runtime_validation(f): # -> _Wrapped[Callable[..., Any], Any, Callable[..., Any], Generator[Any, Any, None]]:
    ...


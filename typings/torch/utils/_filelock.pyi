"""
This type stub file was generated by pyright.
"""

from types import TracebackType
from typing import Optional
from typing_extensions import Self
from filelock import FileLock as base_FileLock

class FileLock(base_FileLock):
    """
    This behaves like a normal file lock.

    However, it adds waitcounters for acquiring and releasing the filelock
    as well as for the critical region within it.

    pytorch.filelock.enter - While we're acquiring the filelock.
    pytorch.filelock.region - While we're holding the filelock and doing work.
    pytorch.filelock.exit - While we're releasing the filelock.
    """
    def __enter__(self) -> Self:
        ...
    
    def __exit__(self, exc_type: Optional[type[BaseException]], exc_value: Optional[BaseException], traceback: Optional[TracebackType]) -> None:
        ...
    



"""
This type stub file was generated by pyright.
"""

from typing import Any, Optional
from . import _device_t

r"""This package adds support for device memory management implemented in MTIA."""
def memory_stats(device: Optional[_device_t] = ...) -> dict[str, Any]:
    r"""Return a dictionary of MTIA memory allocator statistics for a given device.

    Args:
        device (torch.device, str, or int, optional) selected device. Returns
            statistics for the current device, given by current_device(),
            if device is None (default).
    """
    ...

def max_memory_allocated(device: Optional[_device_t] = ...) -> int:
    r"""Return the maximum memory allocated in bytes for a given device.

    Args:
        device (torch.device, str, or int, optional) selected device. Returns
            statistics for the current device, given by current_device(),
            if device is None (default).
    """
    ...

def reset_peak_memory_stats(device: Optional[_device_t] = ...) -> None:
    r"""Reset the peak memory stats for a given device.


    Args:
        device (torch.device, str, or int, optional) selected device. Returns
            statistics for the current device, given by current_device(),
            if device is None (default).
    """
    ...

__all__ = ["memory_stats", "max_memory_allocated", "reset_peak_memory_stats"]

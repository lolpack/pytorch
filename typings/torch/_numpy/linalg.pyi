"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING
from ._normalizations import ArrayLike, KeepDims, normalizer
from collections.abc import Sequence

if TYPE_CHECKING:
    ...
class LinAlgError(Exception):
    ...


def linalg_errors(func): # -> _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]:
    ...

@normalizer
@linalg_errors
def matrix_power(a: ArrayLike, n):
    ...

@normalizer
@linalg_errors
def multi_dot(inputs: Sequence[ArrayLike], *, out=...):
    ...

@normalizer
@linalg_errors
def solve(a: ArrayLike, b: ArrayLike):
    ...

@normalizer
@linalg_errors
def lstsq(a: ArrayLike, b: ArrayLike, rcond=...):
    ...

@normalizer
@linalg_errors
def inv(a: ArrayLike):
    ...

@normalizer
@linalg_errors
def pinv(a: ArrayLike, rcond=..., hermitian=...):
    ...

@normalizer
@linalg_errors
def tensorsolve(a: ArrayLike, b: ArrayLike, axes=...):
    ...

@normalizer
@linalg_errors
def tensorinv(a: ArrayLike, ind=...):
    ...

@normalizer
@linalg_errors
def det(a: ArrayLike):
    ...

@normalizer
@linalg_errors
def slogdet(a: ArrayLike):
    ...

@normalizer
@linalg_errors
def cond(x: ArrayLike, p=...): # -> Tensor:
    ...

@normalizer
@linalg_errors
def matrix_rank(a: ArrayLike, tol=..., hermitian=...): # -> int:
    ...

@normalizer
@linalg_errors
def norm(x: ArrayLike, ord=..., axis=..., keepdims: KeepDims = ...):
    ...

@normalizer
@linalg_errors
def cholesky(a: ArrayLike):
    ...

@normalizer
@linalg_errors
def qr(a: ArrayLike, mode=...):
    ...

@normalizer
@linalg_errors
def svd(a: ArrayLike, full_matrices=..., compute_uv=..., hermitian=...):
    ...

@normalizer
@linalg_errors
def eig(a: ArrayLike): # -> tuple[Any, Any]:
    ...

@normalizer
@linalg_errors
def eigh(a: ArrayLike, UPLO=...):
    ...

@normalizer
@linalg_errors
def eigvals(a: ArrayLike):
    ...

@normalizer
@linalg_errors
def eigvalsh(a: ArrayLike, UPLO=...):
    ...


"""
This type stub file was generated by pyright.
"""

from ._normalizations import ArrayLike, normalizer

def upcast(func): # -> _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]:
    """NumPy fft casts inputs to 64 bit and *returns 64-bit results*."""
    ...

@normalizer
@upcast
def fft(a: ArrayLike, n=..., axis=..., norm=...):
    ...

@normalizer
@upcast
def ifft(a: ArrayLike, n=..., axis=..., norm=...):
    ...

@normalizer
@upcast
def rfft(a: ArrayLike, n=..., axis=..., norm=...):
    ...

@normalizer
@upcast
def irfft(a: ArrayLike, n=..., axis=..., norm=...):
    ...

@normalizer
@upcast
def fftn(a: ArrayLike, s=..., axes=..., norm=...):
    ...

@normalizer
@upcast
def ifftn(a: ArrayLike, s=..., axes=..., norm=...):
    ...

@normalizer
@upcast
def rfftn(a: ArrayLike, s=..., axes=..., norm=...):
    ...

@normalizer
@upcast
def irfftn(a: ArrayLike, s=..., axes=..., norm=...):
    ...

@normalizer
@upcast
def fft2(a: ArrayLike, s=..., axes=..., norm=...):
    ...

@normalizer
@upcast
def ifft2(a: ArrayLike, s=..., axes=..., norm=...):
    ...

@normalizer
@upcast
def rfft2(a: ArrayLike, s=..., axes=..., norm=...):
    ...

@normalizer
@upcast
def irfft2(a: ArrayLike, s=..., axes=..., norm=...):
    ...

@normalizer
@upcast
def hfft(a: ArrayLike, n=..., axis=..., norm=...):
    ...

@normalizer
@upcast
def ihfft(a: ArrayLike, n=..., axis=..., norm=...):
    ...

@normalizer
def fftfreq(n, d=...):
    ...

@normalizer
def rfftfreq(n, d=...):
    ...

@normalizer
def fftshift(x: ArrayLike, axes=...):
    ...

@normalizer
def ifftshift(x: ArrayLike, axes=...):
    ...

